name: "Release CI"

on:
    release:
      types: [created]

jobs:
  build:
    name: Kotlin CI Pipeline
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: "true"
          token: ${{ secrets.GHB_USER_TOKEN }}

      - name: Setup-java
        uses: actions/setup-java@v3
        with:
          distribution: semeru
          java-version: 18

      - name: Lint Commit Messages
        uses: wagoid/commitlint-github-action@v2
      
      # - name: "ktlint"
      #   uses: "block42-blockchain-company/ktlint-action@master" #
       # Builds the release artifacts of the library
      
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build and Publish
        run: ./gradlew :yvos-sdk:assembleRelease


        # Runs upload, and then closes & releases the repository
      - name: Publish to MavenCentral
        run: ./gradlew publishReleasePublicationToSonatypeRepository --max-workers 1 closeAndReleaseSonatypeStagingRepository
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}

      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: "C01BL91B7TQ" #Channel ID
          username: "YV Github Action"
          author_name: "CI Details"
          # if_mention: "failure,cancelled"
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
        env:
          GITHUB_TOKEN: ${{ github.token }} # optional
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
        if: always() # Pick up events even if the job fails or is canceled.




  